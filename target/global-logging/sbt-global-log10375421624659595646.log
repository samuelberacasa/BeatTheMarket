[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.1 (Oracle Corporation Java 13.0.1)
[debug]       Load.loadUnit: plugins took 178.9932ms
[debug]       Load.loadUnit: defsScala took 0.3586ms
[debug] [Loading] Scanning directory C:\Users\Samuel Beracasa\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Samuel Beracasa\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.6988 ms
[debug]           Load.resolveProject(global-plugins) took 41.7362ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Samuel Beracasa\.sbt\1.0\plugins, plugins: List(<none>))) took 85.8024ms
[debug] [Loading] Done in C:\Users\Samuel Beracasa\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 127.8513ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2907ms
[debug]     Load.loadUnit(file:/C:/Users/Samuel%20Beracasa/.sbt/1.0/plugins/, ...) took 330.786ms
[debug]   Load.apply: load took 568.8876ms
[debug]   Load.apply: resolveProjects took 7.8953ms
[debug]   Load.apply: finalTransforms took 106.6561ms
[debug]   Load.apply: config.delegates took 11.199ms
[debug]   Load.apply: Def.make(settings)... took 1192.5913ms
[debug]   Load.apply: structureIndex took 172.9057ms
[debug]   Load.apply: mkStreams took 2.4763ms
[info] loading global plugins from C:\Users\Samuel Beracasa\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4789.2263ms
[debug]           Load.loadUnit: plugins took 44.3383ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\Samuel Beracasa\Documents\_Workspace\Scala\BeatTheMarket\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Samuel Beracasa\Documents\_Workspace\Scala\BeatTheMarket\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.3102 ms
[debug]               Load.resolveProject(beatthemarket-build) took 1.8797ms
[debug]             Load.loadTransitive: finalizeProject(Project(id beatthemarket-build, base: C:\Users\Samuel Beracasa\Documents\_Workspace\Scala\BeatTheMarket\project, plugins: List(<none>))) took 5.1957ms
[debug] [Loading] Done in C:\Users\Samuel Beracasa\Documents\_Workspace\Scala\BeatTheMarket\project, returning: (beatthemarket-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7.0358ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0256ms
[debug]         Load.loadUnit(file:/C:/Users/Samuel%20Beracasa/Documents/_Workspace/Scala/BeatTheMarket/project/, ...) took 52.3901ms
[debug]       Load.apply: load took 56.0594ms
[debug]       Load.apply: resolveProjects took 0.1218ms
[debug]       Load.apply: finalTransforms took 17.6473ms
[debug]       Load.apply: config.delegates took 0.6868ms
[debug]       Load.apply: Def.make(settings)... took 140.6326ms
[debug]       Load.apply: structureIndex took 72.8922ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from C:\Users\Samuel Beracasa\Documents\_Workspace\Scala\BeatTheMarket\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1298.2741ms
[debug]     Load.loadUnit: defsScala took 0.0075ms
[debug] [Loading] Scanning directory C:\Users\Samuel Beracasa\Documents\_Workspace\Scala\BeatTheMarket
[debug]       Load.loadUnit: mkEval took 10.237ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Samuel Beracasa\Documents\_Workspace\Scala\BeatTheMarket, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7639 ms
[info] loading settings for project beatthemarket from build.sbt ...
[debug]         Load.resolveProject(beatthemarket) took 5.1386ms
[debug]       Load.loadTransitive: finalizeProject(Project(id beatthemarket, base: C:\Users\Samuel Beracasa\Documents\_Workspace\Scala\BeatTheMarket, plugins: List(<none>))) took 7.5511ms
[debug] [Loading] Done in C:\Users\Samuel Beracasa\Documents\_Workspace\Scala\BeatTheMarket, returning: (beatthemarket)
[debug]     Load.loadUnit: loadedProjectsRaw took 3637.936ms
[debug]     Load.loadUnit: cleanEvalClasses took 28.6453ms
[debug]   Load.loadUnit(file:/C:/Users/Samuel%20Beracasa/Documents/_Workspace/Scala/BeatTheMarket/, ...) took 4966.1915ms
[debug] Load.apply: load took 4970.0322ms
[debug] Load.apply: resolveProjects took 0.1968ms
[debug] Load.apply: finalTransforms took 10.5468ms
[debug] Load.apply: config.delegates took 0.6232ms
[debug] Load.apply: Def.make(settings)... took 162.7621ms
[debug] Load.apply: structureIndex took 39.9789ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to BeatTheMarket (in build file:/C:/Users/Samuel%20Beracasa/Documents/_Workspace/Scala/BeatTheMarket/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[error] server failed to start on local:sbt-server-c7f2e9b684fa6e633f85. java.io.IOException: Could not create lock for \\.\pipe\sbt-server-c7f2e9b684fa6e633f85_lock, error 5
